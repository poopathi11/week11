-- create a database
create database ecommerce;
use ecommerce;

-- Supplier table
create table supplier (
	supp_id int primary key,
	supp_name varchar(50) not null,
    sup_city varchar(50) not null,
    sup_phone varchar(50) not null);
desc supplier;

-- create customer table
create table customer (
	cus_id int primary key,
	cus_name varchar(50) not null,
    cus_phone varchar(50) not null,
    cus_city varchar(50) not null,
    cus_gender char ) ;
desc customer;
    
-- create category table
create table category (
	cat_id int primary key,
    cat_name varchar(20) not null);
desc category;

-- create a product table
create table product (
	prod_id int primary key,
    prod_name varchar(20) default 'dummy',
    prod_desc varchar(60),
    cat_id int,
    foreign key (cat_id) references category(cat_id));
desc product;	

-- create supplier_pricing table
create table supplier_pricing (
	pricing_id int primary key,
    prod_id int,
    supp_id int,
    supp_price int default 0,
    foreign key (prod_id) references product(prod_id),
    foreign key (supp_id) references supplier(supp_id));
desc supplier_pricing;

-- create orders table
create table orders (
	ord_id int primary key,
	ord_amount int not null,
    ord_date date not null,
    cus_id int,
    pricing_id int,
    foreign key (cus_id) references customer(cus_id),
    foreign key (pricing_id) references supplier_pricing(pricing_id));
desc orders;

-- create rating table -- rating provided in this column is common for product and supplier
create table rating (
	rat_id int primary key,
    ord_id int,
    foreign key (ord_id) references orders(ord_id),
    rat_ratstars int not null);
desc rating;

-- show all tables
show tables;

-- insert data into a supllier table
insert into supplier values
	(1 ,  'Rajesh Retails' ,  'Delhi' ,  '1234567890'),
    (2 , 'Appario Ltd.' ,  'Mumbai' , '2589631470'),
    (3 , 'Knome products' ,  'Banglore' ,  '9785462315'),
    (4 , 'Bansal Retails' ,  'Kochi' ,  '8975463285'),
    (5 , 'Mittal Ltd.' ,  'Lucknow' ,  '7898456532');
select * from supplier;

-- insert data into customer table
insert into customer values
	(1 , 'AAKASH' ,  '9999999999' ,  'DELHI' ,  'M'),
    (2 , 'AMAN' , '9785463215' , 'NOIDA' , 'M'),
    (3 , 'NEHA' , '9999999999' , 'MUMBAI' , 'F'),
    (4 , 'MEGHA' , '9994562399' , 'KOLKATA' , 'F'),
    (5 , 'PULKIT' , '7895999999' , 'LUCKNOW' , 'M');
select * from customer;

-- insert into category table
insert into category values 
	(1,'books'),
    (2,'games'),
    (3,'groceries'),
    (4,'electronics'),
    (5,'clothes');
select * from category;

-- insert data into product table
insert into product values 
	(1 , 'GTA V' , 'Windows 7 and above with i5 processor and 8GB RAM' , 2),
    (2 , 'TSHIRT' , 'SIZE-L with Black, Blue and White variations' , 5),
    (3 , 'ROG LAPTOP' , 'Windows 10 with 15inch screen, i7 processor, 1TB SSD' , 4),
    (4 , 'OATS' ,  'Highly Nutritious from Nestle' , 3),
    (5 , 'HARRY POTTER' , 'Best Collection of all time by J.K Rowling' , 1),
    (6 , 'MILK' , '1L Toned MIlk' , 3),
    (7 , 'Boat Earphones' , '1.5Meter long Dolby Atmos' , 4),
    (8 , 'Jeans' , 'Stretchable Denim Jeans with various sizes and color' , 5),
    (9 , 'Project IGI' , 'compatible with windows 7 and above' , 2),
    (10 , 'Hoodie' , 'Black GUCCI for 13 yrs and above' , 5),
    (11 , 'Rich Dad Poor Dad' , 'Written by RObert Kiyosaki' , 1),
    (12 , 'Train Your Brain' ,  'By Shireen Stephen' , 1);
select * from product;

-- insert data into supplier_pricing table
insert into supplier_pricing values
	(1 , 1 , 2 , 1500),
    (2 , 3 , 5 , 30000),
    (3 , 5 , 1 , 3000),
    (4 , 2 , 3 , 2500),
    (5 , 4 , 1 , 1000),
    (6 , 12 , 2 , 780),
    (7 , 12 , 4 , 789),
    (8 , 3 , 1 , 31000),
    (9 , 1 , 5 , 1450),
    (10 , 4 , 2 , 999),
    (11 , 7 , 3 , 549),
    (12 , 7 , 4 , 529),
    (13 , 6 , 2 , 105),
    (14 , 6 , 1 , 99),
    (15 , 2 , 5 , 2999),
    (16 , 5 , 2 , 2999);
select * from supplier_pricing;

-- insert data into orders table
insert into orders values
	( 101 ,  1500 , '2021-10-06' , 2 , 1 ),
	( 102 , 1000 , '2021-10-12' , 3 , 5 ),
	( 103 , 30000 , '2021-09-16' , 5 , 2 ),
	( 104 , 1500 , '2021-10-05' , 1 , 1 ),
	( 105 , 3000 , '2021-08-16' , 4 , 3 ),
	( 106 , 1450 , '2021-08-18' , 1 , 9 ),
	( 107 , 789 , '2021-09-01' , 3 , 7 ),
	( 108 , 780 , '2021-09-07' , 5 , 6 ),
	( 109 , 3000 , '2021-01-10' , 5 , 3 ),
	( 110 , 2500 , '2021-09-10' , 2 , 4 ),
	( 111 , 1000 , '2021-09-15' , 4 , 5 ),
	( 112 , 789 , '2021-09-16' , 4 , 7 ),
	( 113 , 31000 , '2021-09-16' , 1 , 8 ),
	( 114 , 1000 , '2021-09-16' , 3 , 5 ),
	( 115 , 3000 , '2021-09-16' ,  5 , 3 ),
	( 116 , 99 , '2021-09-17' , 2 , 14 );
select * from orders;

-- insert data into rating table
insert into rating values 
	( 1 , 101 , 4 ),
	( 2 , 102 , 3 ),
	( 3 , 103 , 1 ),
	( 4 , 104 , 2 ),
	( 5 , 105 , 4 ),
	( 6 , 106 , 3 ),
	( 7 , 107 , 4 ),
	( 8 , 108 , 4 ),
	( 9 , 109 , 3 ),
	( 10 , 110 , 5 ),
	( 11 , 111 , 3 ),
	( 12 , 112 , 4),
	( 13 , 113 , 2),
	( 14 , 114 , 1 ),
	( 15 , 115 , 1 ),
	( 16 , 116 , 0 );
select * from rating;

-- Display the total number of customers based on gender who have placed individual orders of worth at least Rs.3000
select cus_gender,count(cus_id) as count from customer 
where cus_id in (select distinct  cus_id from orders where ord_amount >= 3000) group by cus_gender;

-- Display all the orders along with product name ordered by a customer having Customer_Id=2
select o.ord_id as order_id , p.prod_name as product_name from orders o 
join supplier_pricing sp on o.pricing_id = sp.pricing_id
join product p on p.prod_id = sp.prod_id where o.cus_id = 2; 

-- Display the Supplier details who can supply more than one product.
select * from supplier where supp_id in 
(select  supp_id from supplier_pricing  group by supp_id having count(prod_id)>1) ;

-- Create a view as lowest_expensive_product and display the least expensive product from each category and 
-- print the table with category id, name, product name and price of the product.
create or replace view lowest_expensive_product as
select
    c.cat_id,
    c.cat_name,
    p.prod_name as product_name,
    sp.supp_price as price
from
    category c
join
    product p on c.cat_id = p.cat_id
join
    supplier_pricing sp on p.prod_id = sp.prod_id
where
    (c.cat_id, sp.supp_price) in (
        select c1.cat_id, MIN(sp1.supp_price) as min_price
        from  category c1
        join product p1 on c1.cat_id = p1.cat_id
        join supplier_pricing sp1 on p1.prod_id = sp1.prod_id
        group by c1.cat_id
    );
select * from lowest_expensive_product;

-- Display the Id and Name of the Product ordered after “2021-10-05”
select prod_id,prod_name from product where prod_id in (select prod_id from supplier_pricing where pricing_id 
in (select pricing_id from orders where ord_date > '2021-10-05' group by pricing_id));

-- Display customer name and gender whose names start or end with character 'A'
select cus_name,cus_gender from customer where cus_name like '%A' or cus_name like 'A%';

-- Create a stored procedure to display supplier
CALL GetSupplierInfo();
